{"version":3,"file":"accordion.d.ts","sources":["accordion.d.ts"],"names":[],"mappings":"AAAA;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;AAEA","sourcesContent":["import { ElementRef, AfterContentInit, OnDestroy, EventEmitter, QueryList, ChangeDetectorRef, TemplateRef } from '@angular/core';\nimport { Header } from 'primeng/api';\nimport { BlockableUI } from 'primeng/api';\nimport { Subscription } from 'rxjs';\nexport declare class AccordionTab implements OnDestroy {\n    changeDetector: ChangeDetectorRef;\n    header: string;\n    disabled: boolean;\n    cache: boolean;\n    selectedChange: EventEmitter<any>;\n    transitionOptions: string;\n    headerFacet: QueryList<Header>;\n    templates: QueryList<any>;\n    private _selected;\n    private _animating;\n    selected: any;\n    animating: boolean;\n    contentTemplate: TemplateRef<any>;\n    id: string;\n    loaded: boolean;\n    accordion: Accordion;\n    constructor(accordion: any, changeDetector: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    toggle(event: any): boolean;\n    findTabIndex(): number;\n    readonly hasHeaderFacet: boolean;\n    onToggleDone(event: Event): void;\n    onKeydown(event: KeyboardEvent): void;\n    ngOnDestroy(): void;\n}\nexport declare class Accordion implements BlockableUI, AfterContentInit, OnDestroy {\n    el: ElementRef;\n    changeDetector: ChangeDetectorRef;\n    multiple: boolean;\n    onClose: EventEmitter<any>;\n    onOpen: EventEmitter<any>;\n    style: any;\n    styleClass: string;\n    expandIcon: string;\n    collapseIcon: string;\n    activeIndexChange: EventEmitter<any>;\n    tabList: QueryList<AccordionTab>;\n    tabListSubscription: Subscription;\n    private _activeIndex;\n    preventActiveIndexPropagation: boolean;\n    tabs: AccordionTab[];\n    constructor(el: ElementRef, changeDetector: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    initTabs(): any;\n    getBlockableElement(): HTMLElement;\n    activeIndex: any;\n    updateSelectionState(): void;\n    updateActiveIndex(): void;\n    ngOnDestroy(): void;\n}\nexport declare class AccordionModule {\n}\n"]}