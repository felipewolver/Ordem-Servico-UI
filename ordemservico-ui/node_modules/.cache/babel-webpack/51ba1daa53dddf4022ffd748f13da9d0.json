{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Felip/Documents/Angular/ordemservico-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:/Users/Felip/Documents/Angular/ordemservico-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Felip/Documents/Angular/ordemservico-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { forwardRef, EventEmitter, Input, Output, Component, ElementRef, Renderer2, ChangeDetectorRef, NgZone, ViewChild, ContentChildren, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { ObjectUtils, FilterUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/tooltip';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nfunction DropdownItem_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.option.label || \"empty\");\n  }\n}\n\nfunction DropdownItem_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    \"height\": a0\n  };\n};\n\nvar _c1 = function _c1(a1, a2, a3) {\n  return {\n    \"ui-dropdown-item ui-corner-all\": true,\n    \"ui-state-highlight\": a1,\n    \"ui-state-disabled\": a2,\n    \"ui-dropdown-item-empty\": a3\n  };\n};\n\nvar _c2 = function _c2(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nvar _c3 = [\"container\"];\nvar _c4 = [\"filter\"];\nvar _c5 = [\"in\"];\nvar _c6 = [\"editableInput\"];\n\nfunction Dropdown_span_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.label || \"empty\");\n  }\n}\n\nfunction Dropdown_span_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c7 = function _c7(a1) {\n  return {\n    \"ui-dropdown-label ui-inputtext ui-corner-all\": true,\n    \"ui-dropdown-label-empty\": a1\n  };\n};\n\nfunction Dropdown_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtemplate(1, Dropdown_span_6_ng_container_1_Template, 2, 1, \"ng-container\", 13);\n    ɵngcc0.ɵɵtemplate(2, Dropdown_span_6_ng_container_2_Template, 1, 0, \"ng-container\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c7, ctx_r2.label == null || ctx_r2.label.length === 0));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.selectedItemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.selectedItemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx_r2.selectedOption));\n  }\n}\n\nvar _c8 = function _c8(a1) {\n  return {\n    \"ui-dropdown-label ui-inputtext ui-corner-all ui-placeholder\": true,\n    \"ui-dropdown-label-empty\": a1\n  };\n};\n\nfunction Dropdown_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c8, ctx_r3.placeholder == null || ctx_r3.placeholder.length === 0));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.placeholder || \"empty\");\n  }\n}\n\nfunction Dropdown_input_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 15, 16);\n    ɵngcc0.ɵɵlistener(\"click\", function Dropdown_input_8_Template_input_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onEditableInputClick();\n    })(\"input\", function Dropdown_input_8_Template_input_input_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onEditableInputChange($event);\n    })(\"focus\", function Dropdown_input_8_Template_input_focus_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onEditableInputFocus($event);\n    })(\"blur\", function Dropdown_input_8_Template_input_blur_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.onInputBlur($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r4.disabled);\n    ɵngcc0.ɵɵattribute(\"maxlength\", ctx_r4.maxlength)(\"aria-label\", ctx_r4.selectedOption ? ctx_r4.selectedOption.label : \" \")(\"placeholder\", ctx_r4.placeholder)(\"aria-expanded\", ctx_r4.overlayVisible);\n  }\n}\n\nfunction Dropdown_i_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"i\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function Dropdown_i_9_Template_i_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.clear($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction Dropdown_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function Dropdown_div_12_div_1_Template_div_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"input\", 25, 26);\n    ɵngcc0.ɵɵlistener(\"keydown.enter\", function Dropdown_div_12_div_1_Template_input_keydown_enter_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      return $event.preventDefault();\n    })(\"keydown\", function Dropdown_div_12_div_1_Template_input_keydown_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r27.onKeydown($event, false);\n    })(\"input\", function Dropdown_div_12_div_1_Template_input_input_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r28 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r28.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r17.filterValue || \"\");\n    ɵngcc0.ɵɵattribute(\"placeholder\", ctx_r17.filterPlaceholder)(\"aria-label\", ctx_r17.ariaFilterLabel);\n  }\n}\n\nfunction Dropdown_div_12_ng_container_4_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var optgroup_r30 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(optgroup_r30.label || \"empty\");\n  }\n}\n\nfunction Dropdown_div_12_ng_container_4_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_div_12_ng_container_4_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c9 = function _c9(a0, a1) {\n  return {\n    $implicit: a0,\n    selectedOption: a1\n  };\n};\n\nfunction Dropdown_div_12_ng_container_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 29);\n    ɵngcc0.ɵɵtemplate(1, Dropdown_div_12_ng_container_4_ng_template_1_span_1_Template, 2, 1, \"span\", 13);\n    ɵngcc0.ɵɵtemplate(2, Dropdown_div_12_ng_container_4_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, Dropdown_div_12_ng_container_4_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 14);\n  }\n\n  if (rf & 2) {\n    var optgroup_r30 = ctx.$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n\n    var _r20 = ɵngcc0.ɵɵreference(7);\n\n    var ctx_r29 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r29.groupTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r29.groupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(5, _c2, optgroup_r30));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r20)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(7, _c9, optgroup_r30.items, ctx_r29.selectedOption));\n  }\n}\n\nfunction Dropdown_div_12_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, Dropdown_div_12_ng_container_4_ng_template_1_Template, 4, 10, \"ng-template\", 28);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r18.optionsToDisplay);\n  }\n}\n\nfunction Dropdown_div_12_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_div_12_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, Dropdown_div_12_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    var _r20 = ɵngcc0.ɵɵreference(7);\n\n    var ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r20)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c9, ctx_r19.optionsToDisplay, ctx_r19.selectedOption));\n  }\n}\n\nfunction Dropdown_div_12_ng_template_6_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r45 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-dropdownItem\", 32);\n    ɵngcc0.ɵɵlistener(\"onClick\", function Dropdown_div_12_ng_template_6_ng_container_0_ng_template_1_Template_p_dropdownItem_onClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r45);\n      var ctx_r44 = ɵngcc0.ɵɵnextContext(4);\n      return ctx_r44.onItemClick($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r42 = ctx.$implicit;\n    var selectedOption_r37 = ɵngcc0.ɵɵnextContext(2).selectedOption;\n    var ctx_r41 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"option\", option_r42)(\"selected\", selectedOption_r37 == option_r42)(\"template\", ctx_r41.itemTemplate);\n  }\n}\n\nfunction Dropdown_div_12_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, Dropdown_div_12_ng_template_6_ng_container_0_ng_template_1_Template, 1, 3, \"ng-template\", 28);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var options_r36 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", options_r36);\n  }\n}\n\nfunction Dropdown_div_12_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r59 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"p-dropdownItem\", 32);\n    ɵngcc0.ɵɵlistener(\"onClick\", function Dropdown_div_12_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template_p_dropdownItem_onClick_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r59);\n      var ctx_r58 = ɵngcc0.ɵɵnextContext(5);\n      return ctx_r58.onItemClick($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var option_r51 = ctx.$implicit;\n    var selectedOption_r37 = ɵngcc0.ɵɵnextContext(3).selectedOption;\n    var ctx_r50 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"option\", option_r51)(\"selected\", selectedOption_r37 == option_r51)(\"template\", ctx_r50.itemTemplate);\n  }\n}\n\nfunction Dropdown_div_12_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r62 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 34, 35);\n    ɵngcc0.ɵɵlistener(\"scrolledIndexChange\", function Dropdown_div_12_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r62);\n      var ctx_r61 = ɵngcc0.ɵɵnextContext(4);\n      return ctx_r61.scrollToSelectedVirtualScrollElement();\n    });\n    ɵngcc0.ɵɵtemplate(2, Dropdown_div_12_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template, 2, 3, \"ng-container\", 36);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var options_r36 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r48 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx_r48.scrollHeight))(\"itemSize\", ctx_r48.itemSize);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"cdkVirtualForOf\", options_r36);\n  }\n}\n\nfunction Dropdown_div_12_ng_template_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Dropdown_div_12_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template, 3, 5, \"cdk-virtual-scroll-viewport\", 33);\n  }\n\n  if (rf & 2) {\n    var ctx_r40 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r40.virtualScroll && ctx_r40.optionsToDisplay && ctx_r40.optionsToDisplay.length);\n  }\n}\n\nfunction Dropdown_div_12_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Dropdown_div_12_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 30);\n    ɵngcc0.ɵɵtemplate(1, Dropdown_div_12_ng_template_6_ng_template_1_Template, 1, 1, \"ng-template\", null, 31, ɵngcc0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    var _r39 = ɵngcc0.ɵɵreference(2);\n\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r21.virtualScroll)(\"ngIfElse\", _r39);\n  }\n}\n\nfunction Dropdown_div_12_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 37);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r22.emptyFilterMessage);\n  }\n}\n\nvar _c10 = function _c10(a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nvar _c11 = function _c11(a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nfunction Dropdown_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r65 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵlistener(\"@overlayAnimation.start\", function Dropdown_div_12_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r65);\n      var ctx_r64 = ɵngcc0.ɵɵnextContext();\n      return ctx_r64.onOverlayAnimationStart($event);\n    });\n    ɵngcc0.ɵɵtemplate(1, Dropdown_div_12_div_1_Template, 4, 3, \"div\", 19);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(3, \"ul\", 21);\n    ɵngcc0.ɵɵtemplate(4, Dropdown_div_12_ng_container_4_Template, 2, 1, \"ng-container\", 13);\n    ɵngcc0.ɵɵtemplate(5, Dropdown_div_12_ng_container_5_Template, 2, 5, \"ng-container\", 13);\n    ɵngcc0.ɵɵtemplate(6, Dropdown_div_12_ng_template_6_Template, 3, 2, \"ng-template\", null, 22, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(8, Dropdown_div_12_li_8_Template, 2, 1, \"li\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r6.panelStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"ui-dropdown-panel  ui-widget ui-widget-content ui-corner-all ui-shadow\")(\"@overlayAnimation\", ɵngcc0.ɵɵpureFunction1(14, _c11, ɵngcc0.ɵɵpureFunction2(11, _c10, ctx_r6.showTransitionOptions, ctx_r6.hideTransitionOptions)))(\"ngStyle\", ctx_r6.panelStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.filter);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r6.virtualScroll ? \"auto\" : ctx_r6.scrollHeight || \"auto\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.group);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r6.group);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.filter && (!ctx_r6.optionsToDisplay || ctx_r6.optionsToDisplay && ctx_r6.optionsToDisplay.length === 0));\n  }\n}\n\nvar _c12 = function _c12(a1, a2, a3, a4) {\n  return {\n    \"ui-dropdown ui-widget ui-state-default ui-corner-all\": true,\n    \"ui-state-disabled\": a1,\n    \"ui-dropdown-open\": a2,\n    \"ui-state-focus\": a3,\n    \"ui-dropdown-clearable\": a4\n  };\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar DROPDOWN_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*@__PURE__*/forwardRef(function () {\n    return Dropdown;\n  }),\n  multi: true\n};\n\nvar DropdownItem = /*@__PURE__*/function () {\n  var DropdownItem = /*#__PURE__*/function () {\n    function DropdownItem() {\n      _classCallCheck(this, DropdownItem);\n\n      this.onClick = new EventEmitter();\n    }\n\n    _createClass(DropdownItem, [{\n      key: \"onOptionClick\",\n      value: function onOptionClick(event) {\n        this.onClick.emit({\n          originalEvent: event,\n          option: this.option\n        });\n      }\n    }]);\n\n    return DropdownItem;\n  }();\n\n  DropdownItem.ɵfac = function DropdownItem_Factory(t) {\n    return new (t || DropdownItem)();\n  };\n\n  DropdownItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DropdownItem,\n    selectors: [[\"p-dropdownItem\"]],\n    inputs: {\n      option: \"option\",\n      selected: \"selected\",\n      disabled: \"disabled\",\n      visible: \"visible\",\n      itemSize: \"itemSize\",\n      template: \"template\"\n    },\n    outputs: {\n      onClick: \"onClick\"\n    },\n    decls: 3,\n    vars: 15,\n    consts: [[\"role\", \"option\", 3, \"ngStyle\", \"ngClass\", \"click\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function DropdownItem_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"li\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function DropdownItem_Template_li_click_0_listener($event) {\n          return ctx.onOptionClick($event);\n        });\n        ɵngcc0.ɵɵtemplate(1, DropdownItem_span_1_Template, 2, 1, \"span\", 1);\n        ɵngcc0.ɵɵtemplate(2, DropdownItem_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(7, _c0, ctx.itemSize + \"px\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction3(9, _c1, ctx.selected, ctx.option.disabled, !ctx.option.label || ctx.option.label.length === 0));\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.option.label)(\"aria-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(13, _c2, ctx.option));\n      }\n    },\n    directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return DropdownItem;\n}();\n\nvar Dropdown = /*@__PURE__*/function () {\n  var Dropdown = /*#__PURE__*/function () {\n    function Dropdown(el, renderer, cd, zone) {\n      _classCallCheck(this, Dropdown);\n\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.zone = zone;\n      this.scrollHeight = '200px';\n      this.filterBy = 'label';\n      this.resetFilterOnHide = false;\n      this.dropdownIcon = 'pi pi-chevron-down';\n      this.autoDisplayFirst = true;\n      this.emptyFilterMessage = 'No results found';\n      this.autoZIndex = true;\n      this.baseZIndex = 0;\n      this.showTransitionOptions = '225ms ease-out';\n      this.hideTransitionOptions = '195ms ease-in';\n      this.filterMatchMode = \"contains\";\n      this.tooltip = '';\n      this.tooltipPosition = 'right';\n      this.tooltipPositionStyle = 'absolute';\n      this.autofocusFilter = true;\n      this.onChange = new EventEmitter();\n      this.onFocus = new EventEmitter();\n      this.onBlur = new EventEmitter();\n      this.onClick = new EventEmitter();\n      this.onShow = new EventEmitter();\n      this.onHide = new EventEmitter();\n\n      this.onModelChange = function () {};\n\n      this.onModelTouched = function () {};\n\n      this.viewPortOffsetTop = 0;\n    }\n\n    _createClass(Dropdown, [{\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this = this;\n\n        this.templates.forEach(function (item) {\n          switch (item.getType()) {\n            case 'item':\n              _this.itemTemplate = item.template;\n              break;\n\n            case 'selectedItem':\n              _this.selectedItemTemplate = item.template;\n              break;\n\n            case 'group':\n              _this.groupTemplate = item.template;\n              break;\n\n            default:\n              _this.itemTemplate = item.template;\n              break;\n          }\n        });\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.optionsToDisplay = this.options;\n        this.updateSelectedOption(null);\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        if (this.editable) {\n          this.updateEditableLabel();\n        }\n      }\n    }, {\n      key: \"updateEditableLabel\",\n      value: function updateEditableLabel() {\n        if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n          this.editableInputViewChild.nativeElement.value = this.selectedOption ? this.selectedOption.label : this.value || '';\n        }\n      }\n    }, {\n      key: \"onItemClick\",\n      value: function onItemClick(event) {\n        var _this2 = this;\n\n        var option = event.option;\n\n        if (!option.disabled) {\n          this.selectItem(event, option);\n          this.accessibleViewChild.nativeElement.focus();\n        }\n\n        setTimeout(function () {\n          _this2.hide(event);\n        }, 150);\n      }\n    }, {\n      key: \"selectItem\",\n      value: function selectItem(event, option) {\n        var _this3 = this;\n\n        if (this.selectedOption != option) {\n          this.selectedOption = option;\n          this.value = option.value;\n          this.filled = true;\n          this.onModelChange(this.value);\n          this.updateEditableLabel();\n          this.onChange.emit({\n            originalEvent: event.originalEvent,\n            value: this.value\n          });\n\n          if (this.virtualScroll) {\n            setTimeout(function () {\n              _this3.viewPortOffsetTop = _this3.viewPort ? _this3.viewPort.measureScrollOffset() : 0;\n            }, 1);\n          }\n        }\n      }\n    }, {\n      key: \"ngAfterViewChecked\",\n      value: function ngAfterViewChecked() {\n        var _this4 = this;\n\n        if (this.optionsChanged && this.overlayVisible) {\n          this.optionsChanged = false;\n\n          if (this.virtualScroll) {\n            this.updateVirtualScrollSelectedIndex(true);\n          }\n\n          this.zone.runOutsideAngular(function () {\n            setTimeout(function () {\n              _this4.alignOverlay();\n            }, 1);\n          });\n        }\n\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\n          if (this.virtualScroll && this.viewPort) {\n            var range = this.viewPort.getRenderedRange();\n            this.updateVirtualScrollSelectedIndex(false);\n\n            if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n              this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n            }\n          }\n\n          var selectedItem = DomHandler.findSingle(this.overlay, 'li.ui-state-highlight');\n\n          if (selectedItem) {\n            DomHandler.scrollInView(this.itemsWrapper, DomHandler.findSingle(this.overlay, 'li.ui-state-highlight'));\n          }\n\n          this.selectedOptionUpdated = false;\n        }\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        if (this.filter) {\n          this.resetFilter();\n        }\n\n        this.value = value;\n        this.updateSelectedOption(value);\n        this.updateEditableLabel();\n        this.updateFilledState();\n        this.cd.markForCheck();\n      }\n    }, {\n      key: \"resetFilter\",\n      value: function resetFilter() {\n        this.filterValue = null;\n\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n          this.filterViewChild.nativeElement.value = '';\n        }\n\n        this.optionsToDisplay = this.options;\n      }\n    }, {\n      key: \"updateSelectedOption\",\n      value: function updateSelectedOption(val) {\n        this.selectedOption = this.findOption(val, this.optionsToDisplay);\n\n        if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n          this.selectedOption = this.optionsToDisplay[0];\n        }\n\n        this.selectedOptionUpdated = true;\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onModelChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onModelTouched = fn;\n      }\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(val) {\n        this.disabled = val;\n      }\n    }, {\n      key: \"onMouseclick\",\n      value: function onMouseclick(event) {\n        if (this.disabled || this.readonly || this.isInputClick(event)) {\n          return;\n        }\n\n        this.onClick.emit(event);\n        this.accessibleViewChild.nativeElement.focus();\n        if (this.overlayVisible) this.hide(event);else this.show();\n        this.cd.detectChanges();\n      }\n    }, {\n      key: \"isInputClick\",\n      value: function isInputClick(event) {\n        return DomHandler.hasClass(event.target, 'ui-dropdown-clear-icon') || event.target.isSameNode(this.accessibleViewChild.nativeElement) || this.editableInputViewChild && event.target.isSameNode(this.editableInputViewChild.nativeElement);\n      }\n    }, {\n      key: \"isOutsideClicked\",\n      value: function isOutsideClicked(event) {\n        return !(this.el.nativeElement.isSameNode(event.target) || this.el.nativeElement.contains(event.target) || this.overlay && this.overlay.contains(event.target));\n      }\n    }, {\n      key: \"onEditableInputClick\",\n      value: function onEditableInputClick() {\n        this.bindDocumentClickListener();\n      }\n    }, {\n      key: \"onEditableInputFocus\",\n      value: function onEditableInputFocus(event) {\n        this.focused = true;\n        this.hide(event);\n        this.onFocus.emit(event);\n      }\n    }, {\n      key: \"onEditableInputChange\",\n      value: function onEditableInputChange(event) {\n        this.value = event.target.value;\n        this.updateSelectedOption(this.value);\n        this.onModelChange(this.value);\n        this.onChange.emit({\n          originalEvent: event,\n          value: this.value\n        });\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        this.overlayVisible = true;\n      }\n    }, {\n      key: \"onOverlayAnimationStart\",\n      value: function onOverlayAnimationStart(event) {\n        switch (event.toState) {\n          case 'visible':\n            this.overlay = event.element;\n            var itemsWrapperSelector = this.virtualScroll ? '.cdk-virtual-scroll-viewport' : '.ui-dropdown-items-wrapper';\n            this.itemsWrapper = DomHandler.findSingle(this.overlay, itemsWrapperSelector);\n            this.appendOverlay();\n\n            if (this.autoZIndex) {\n              this.overlay.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n            }\n\n            this.alignOverlay();\n            this.bindDocumentClickListener();\n            this.bindDocumentResizeListener();\n\n            if (this.options && this.options.length) {\n              if (!this.virtualScroll) {\n                var selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.ui-dropdown-item.ui-state-highlight');\n\n                if (selectedListItem) {\n                  DomHandler.scrollInView(this.itemsWrapper, selectedListItem);\n                }\n              }\n            }\n\n            if (this.filterViewChild && this.filterViewChild.nativeElement) {\n              this.preventModelTouched = true;\n\n              if (this.autofocusFilter) {\n                this.filterViewChild.nativeElement.focus();\n              }\n            }\n\n            this.onShow.emit(event);\n            break;\n\n          case 'void':\n            this.onOverlayHide();\n            break;\n        }\n      }\n    }, {\n      key: \"scrollToSelectedVirtualScrollElement\",\n      value: function scrollToSelectedVirtualScrollElement() {\n        if (!this.virtualAutoScrolled) {\n          if (this.viewPortOffsetTop) {\n            this.viewPort.scrollToOffset(this.viewPortOffsetTop);\n          } else if (this.virtualScrollSelectedIndex > -1) {\n            this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n          }\n        }\n\n        this.virtualAutoScrolled = true;\n      }\n    }, {\n      key: \"updateVirtualScrollSelectedIndex\",\n      value: function updateVirtualScrollSelectedIndex(resetOffset) {\n        if (this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length) {\n          if (resetOffset) {\n            this.viewPortOffsetTop = 0;\n          }\n\n          this.virtualScrollSelectedIndex = this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay);\n        }\n      }\n    }, {\n      key: \"appendOverlay\",\n      value: function appendOverlay() {\n        if (this.appendTo) {\n          if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n          if (!this.overlay.style.minWidth) {\n            this.overlay.style.minWidth = DomHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\n          }\n        }\n      }\n    }, {\n      key: \"restoreOverlayAppend\",\n      value: function restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n          this.el.nativeElement.appendChild(this.overlay);\n        }\n      }\n    }, {\n      key: \"hide\",\n      value: function hide(event) {\n        this.overlayVisible = false;\n\n        if (this.filter && this.resetFilterOnHide) {\n          this.resetFilter();\n        }\n\n        if (this.virtualScroll) {\n          this.virtualAutoScrolled = false;\n        }\n\n        this.cd.markForCheck();\n        this.onHide.emit(event);\n      }\n    }, {\n      key: \"alignOverlay\",\n      value: function alignOverlay() {\n        if (this.overlay) {\n          if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);else DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\n        }\n      }\n    }, {\n      key: \"onInputFocus\",\n      value: function onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n      }\n    }, {\n      key: \"onInputBlur\",\n      value: function onInputBlur(event) {\n        this.focused = false;\n        this.onBlur.emit(event);\n\n        if (!this.preventModelTouched) {\n          this.onModelTouched();\n        }\n\n        this.preventModelTouched = false;\n      }\n    }, {\n      key: \"findPrevEnabledOption\",\n      value: function findPrevEnabledOption(index) {\n        var prevEnabledOption;\n\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n          for (var i = index - 1; 0 <= i; i--) {\n            var option = this.optionsToDisplay[i];\n\n            if (option.disabled) {\n              continue;\n            } else {\n              prevEnabledOption = option;\n              break;\n            }\n          }\n\n          if (!prevEnabledOption) {\n            for (var _i = this.optionsToDisplay.length - 1; _i >= index; _i--) {\n              var _option = this.optionsToDisplay[_i];\n\n              if (_option.disabled) {\n                continue;\n              } else {\n                prevEnabledOption = _option;\n                break;\n              }\n            }\n          }\n        }\n\n        return prevEnabledOption;\n      }\n    }, {\n      key: \"findNextEnabledOption\",\n      value: function findNextEnabledOption(index) {\n        var nextEnabledOption;\n\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n          for (var i = index + 1; index < this.optionsToDisplay.length - 1; i++) {\n            var option = this.optionsToDisplay[i];\n\n            if (option.disabled) {\n              continue;\n            } else {\n              nextEnabledOption = option;\n              break;\n            }\n          }\n\n          if (!nextEnabledOption) {\n            for (var _i2 = 0; _i2 < index; _i2++) {\n              var _option2 = this.optionsToDisplay[_i2];\n\n              if (_option2.disabled) {\n                continue;\n              } else {\n                nextEnabledOption = _option2;\n                break;\n              }\n            }\n          }\n        }\n\n        return nextEnabledOption;\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event, search) {\n        if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n          return;\n        }\n\n        switch (event.which) {\n          //down\n          case 40:\n            if (!this.overlayVisible && event.altKey) {\n              this.show();\n            } else {\n              if (this.group) {\n                var selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n\n                if (selectedItemIndex !== -1) {\n                  var nextItemIndex = selectedItemIndex.itemIndex + 1;\n\n                  if (nextItemIndex < this.optionsToDisplay[selectedItemIndex.groupIndex].items.length) {\n                    this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex].items[nextItemIndex]);\n                    this.selectedOptionUpdated = true;\n                  } else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                    this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex + 1].items[0]);\n                    this.selectedOptionUpdated = true;\n                  }\n                } else {\n                  this.selectItem(event, this.optionsToDisplay[0].items[0]);\n                }\n              } else {\n                var _selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n\n                var nextEnabledOption = this.findNextEnabledOption(_selectedItemIndex);\n\n                if (nextEnabledOption) {\n                  this.selectItem(event, nextEnabledOption);\n                  this.selectedOptionUpdated = true;\n                }\n              }\n            }\n\n            event.preventDefault();\n            break;\n          //up\n\n          case 38:\n            if (this.group) {\n              var _selectedItemIndex2 = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n\n              if (_selectedItemIndex2 !== -1) {\n                var prevItemIndex = _selectedItemIndex2.itemIndex - 1;\n\n                if (prevItemIndex >= 0) {\n                  this.selectItem(event, this.optionsToDisplay[_selectedItemIndex2.groupIndex].items[prevItemIndex]);\n                  this.selectedOptionUpdated = true;\n                } else if (prevItemIndex < 0) {\n                  var prevGroup = this.optionsToDisplay[_selectedItemIndex2.groupIndex - 1];\n\n                  if (prevGroup) {\n                    this.selectItem(event, prevGroup.items[prevGroup.items.length - 1]);\n                    this.selectedOptionUpdated = true;\n                  }\n                }\n              }\n            } else {\n              var _selectedItemIndex3 = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n\n              var prevEnabledOption = this.findPrevEnabledOption(_selectedItemIndex3);\n\n              if (prevEnabledOption) {\n                this.selectItem(event, prevEnabledOption);\n                this.selectedOptionUpdated = true;\n              }\n            }\n\n            event.preventDefault();\n            break;\n          //space\n\n          case 32:\n          case 32:\n            if (!this.overlayVisible) {\n              this.show();\n              event.preventDefault();\n            }\n\n            break;\n          //enter\n\n          case 13:\n            if (!this.filter || this.optionsToDisplay && this.optionsToDisplay.length > 0) {\n              this.hide(event);\n            }\n\n            event.preventDefault();\n            break;\n          //escape and tab\n\n          case 27:\n          case 9:\n            this.hide(event);\n            break;\n          //search item based on keyboard input\n\n          default:\n            if (search) {\n              this.search(event);\n            }\n\n            break;\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(event) {\n        var _this5 = this;\n\n        if (this.searchTimeout) {\n          clearTimeout(this.searchTimeout);\n        }\n\n        var char = event.key;\n        this.previousSearchChar = this.currentSearchChar;\n        this.currentSearchChar = char;\n        if (this.previousSearchChar === this.currentSearchChar) this.searchValue = this.currentSearchChar;else this.searchValue = this.searchValue ? this.searchValue + char : char;\n        var newOption;\n\n        if (this.group) {\n          var searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : {\n            groupIndex: 0,\n            itemIndex: 0\n          };\n          newOption = this.searchOptionWithinGroup(searchIndex);\n        } else {\n          var _searchIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n\n          newOption = this.searchOption(++_searchIndex);\n        }\n\n        if (newOption && !newOption.disabled) {\n          this.selectItem(event, newOption);\n          this.selectedOptionUpdated = true;\n        }\n\n        this.searchTimeout = setTimeout(function () {\n          _this5.searchValue = null;\n        }, 250);\n      }\n    }, {\n      key: \"searchOption\",\n      value: function searchOption(index) {\n        var option;\n\n        if (this.searchValue) {\n          option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n\n          if (!option) {\n            option = this.searchOptionInRange(0, index);\n          }\n        }\n\n        return option;\n      }\n    }, {\n      key: \"searchOptionInRange\",\n      value: function searchOptionInRange(start, end) {\n        for (var i = start; i < end; i++) {\n          var opt = this.optionsToDisplay[i];\n\n          if (opt.label.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !opt.disabled) {\n            return opt;\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"searchOptionWithinGroup\",\n      value: function searchOptionWithinGroup(index) {\n        var option;\n\n        if (this.searchValue) {\n          for (var i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n            for (var j = index.groupIndex === i ? index.itemIndex + 1 : 0; j < this.optionsToDisplay[i].items.length; j++) {\n              var opt = this.optionsToDisplay[i].items[j];\n\n              if (opt.label.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !opt.disabled) {\n                return opt;\n              }\n            }\n          }\n\n          if (!option) {\n            for (var _i3 = 0; _i3 <= index.groupIndex; _i3++) {\n              for (var _j = 0; _j < (index.groupIndex === _i3 ? index.itemIndex : this.optionsToDisplay[_i3].items.length); _j++) {\n                var _opt = this.optionsToDisplay[_i3].items[_j];\n\n                if (_opt.label.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !_opt.disabled) {\n                  return _opt;\n                }\n              }\n            }\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"findOptionIndex\",\n      value: function findOptionIndex(val, opts) {\n        var index = -1;\n\n        if (opts) {\n          for (var i = 0; i < opts.length; i++) {\n            if (val == null && opts[i].value == null || ObjectUtils.equals(val, opts[i].value, this.dataKey)) {\n              index = i;\n              break;\n            }\n          }\n        }\n\n        return index;\n      }\n    }, {\n      key: \"findOptionGroupIndex\",\n      value: function findOptionGroupIndex(val, opts) {\n        var groupIndex, itemIndex;\n\n        if (opts) {\n          for (var i = 0; i < opts.length; i++) {\n            groupIndex = i;\n            itemIndex = this.findOptionIndex(val, opts[i].items);\n\n            if (itemIndex !== -1) {\n              break;\n            }\n          }\n        }\n\n        if (itemIndex !== -1) {\n          return {\n            groupIndex: groupIndex,\n            itemIndex: itemIndex\n          };\n        } else {\n          return -1;\n        }\n      }\n    }, {\n      key: \"findOption\",\n      value: function findOption(val, opts, inGroup) {\n        if (this.group && !inGroup) {\n          var opt;\n\n          if (opts && opts.length) {\n            var _iterator = _createForOfIteratorHelper(opts),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var optgroup = _step.value;\n                opt = this.findOption(val, optgroup.items, true);\n\n                if (opt) {\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n\n          return opt;\n        } else {\n          var index = this.findOptionIndex(val, opts);\n          return index != -1 ? opts[index] : null;\n        }\n      }\n    }, {\n      key: \"onFilter\",\n      value: function onFilter(event) {\n        var inputValue = event.target.value;\n\n        if (inputValue && inputValue.length) {\n          this.filterValue = inputValue;\n          this.activateFilter();\n        } else {\n          this.filterValue = null;\n          this.optionsToDisplay = this.options;\n        }\n\n        this.optionsChanged = true;\n      }\n    }, {\n      key: \"activateFilter\",\n      value: function activateFilter() {\n        var searchFields = this.filterBy.split(',');\n\n        if (this.options && this.options.length) {\n          if (this.group) {\n            var filteredGroups = [];\n\n            var _iterator2 = _createForOfIteratorHelper(this.options),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var optgroup = _step2.value;\n                var filteredSubOptions = FilterUtils.filter(optgroup.items, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n                if (filteredSubOptions && filteredSubOptions.length) {\n                  filteredGroups.push({\n                    label: optgroup.label,\n                    value: optgroup.value,\n                    items: filteredSubOptions\n                  });\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            this.optionsToDisplay = filteredGroups;\n          } else {\n            this.optionsToDisplay = FilterUtils.filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n          }\n\n          this.optionsChanged = true;\n        }\n      }\n    }, {\n      key: \"applyFocus\",\n      value: function applyFocus() {\n        if (this.editable) DomHandler.findSingle(this.el.nativeElement, '.ui-dropdown-label.ui-inputtext').focus();else DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n      }\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        this.applyFocus();\n      }\n    }, {\n      key: \"bindDocumentClickListener\",\n      value: function bindDocumentClickListener() {\n        var _this6 = this;\n\n        if (!this.documentClickListener) {\n          this.documentClickListener = this.renderer.listen('document', 'click', function (event) {\n            if (_this6.isOutsideClicked(event)) {\n              _this6.hide(event);\n\n              _this6.unbindDocumentClickListener();\n            }\n\n            _this6.cd.markForCheck();\n          });\n        }\n      }\n    }, {\n      key: \"unbindDocumentClickListener\",\n      value: function unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n          this.documentClickListener();\n          this.documentClickListener = null;\n        }\n      }\n    }, {\n      key: \"bindDocumentResizeListener\",\n      value: function bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    }, {\n      key: \"unbindDocumentResizeListener\",\n      value: function unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n          window.removeEventListener('resize', this.documentResizeListener);\n          this.documentResizeListener = null;\n        }\n      }\n    }, {\n      key: \"onWindowResize\",\n      value: function onWindowResize() {\n        if (!DomHandler.isAndroid()) {\n          this.hide(event);\n        }\n      }\n    }, {\n      key: \"updateFilledState\",\n      value: function updateFilledState() {\n        this.filled = this.selectedOption != null;\n      }\n    }, {\n      key: \"clear\",\n      value: function clear(event) {\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onChange.emit({\n          originalEvent: event,\n          value: this.value\n        });\n        this.updateSelectedOption(this.value);\n        this.updateEditableLabel();\n        this.updateFilledState();\n      }\n    }, {\n      key: \"onOverlayHide\",\n      value: function onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.overlay = null;\n        this.itemsWrapper = null;\n        this.onModelTouched();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n      }\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      },\n      set: function set(_disabled) {\n        if (_disabled) this.focused = false;\n        this._disabled = _disabled;\n\n        if (!this.cd.destroyed) {\n          this.cd.detectChanges();\n        }\n      }\n    }, {\n      key: \"options\",\n      get: function get() {\n        return this._options;\n      },\n      set: function set(val) {\n        var opts = this.optionLabel ? ObjectUtils.generateSelectItems(val, this.optionLabel) : val;\n        this._options = opts;\n        this.optionsToDisplay = this._options;\n        this.updateSelectedOption(this.value);\n        this.optionsChanged = true;\n        this.updateFilledState();\n\n        if (this.filterValue && this.filterValue.length) {\n          this.activateFilter();\n        }\n      }\n    }, {\n      key: \"label\",\n      get: function get() {\n        return this.selectedOption ? this.selectedOption.label : null;\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.ɵfac = function Dropdown_Factory(t) {\n    return new (t || Dropdown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  Dropdown.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Dropdown,\n    selectors: [[\"p-dropdown\"]],\n    contentQueries: function Dropdown_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, false);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Dropdown_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n        ɵngcc0.ɵɵviewQuery(_c5, true);\n        ɵngcc0.ɵɵviewQuery(CdkVirtualScrollViewport, true);\n        ɵngcc0.ɵɵviewQuery(_c6, true);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterViewChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accessibleViewChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewPort = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.editableInputViewChild = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function Dropdown_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ui-inputwrapper-filled\", ctx.filled)(\"ui-inputwrapper-focus\", ctx.focused);\n      }\n    },\n    inputs: {\n      scrollHeight: \"scrollHeight\",\n      filterBy: \"filterBy\",\n      resetFilterOnHide: \"resetFilterOnHide\",\n      dropdownIcon: \"dropdownIcon\",\n      autoDisplayFirst: \"autoDisplayFirst\",\n      emptyFilterMessage: \"emptyFilterMessage\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      filterMatchMode: \"filterMatchMode\",\n      tooltip: \"tooltip\",\n      tooltipPosition: \"tooltipPosition\",\n      tooltipPositionStyle: \"tooltipPositionStyle\",\n      autofocusFilter: \"autofocusFilter\",\n      disabled: \"disabled\",\n      options: \"options\",\n      filter: \"filter\",\n      name: \"name\",\n      style: \"style\",\n      panelStyle: \"panelStyle\",\n      styleClass: \"styleClass\",\n      panelStyleClass: \"panelStyleClass\",\n      readonly: \"readonly\",\n      required: \"required\",\n      editable: \"editable\",\n      appendTo: \"appendTo\",\n      tabindex: \"tabindex\",\n      placeholder: \"placeholder\",\n      filterPlaceholder: \"filterPlaceholder\",\n      filterLocale: \"filterLocale\",\n      inputId: \"inputId\",\n      selectId: \"selectId\",\n      dataKey: \"dataKey\",\n      autofocus: \"autofocus\",\n      optionLabel: \"optionLabel\",\n      group: \"group\",\n      showClear: \"showClear\",\n      virtualScroll: \"virtualScroll\",\n      itemSize: \"itemSize\",\n      ariaFilterLabel: \"ariaFilterLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      maxlength: \"maxlength\",\n      tooltipStyleClass: \"tooltipStyleClass\"\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\",\n      onClick: \"onClick\",\n      onShow: \"onShow\",\n      onHide: \"onHide\"\n    },\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([DROPDOWN_VALUE_ACCESSOR])],\n    decls: 13,\n    vars: 27,\n    consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [1, \"ui-helper-hidden-accessible\"], [\"type\", \"text\", \"readonly\", \"\", \"aria-haspopup\", \"listbox\", \"aria-haspopup\", \"listbox\", \"role\", \"listbox\", 3, \"disabled\", \"focus\", \"blur\", \"keydown\"], [\"in\", \"\"], [1, \"ui-dropdown-label-container\", 3, \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\"], [3, \"ngClass\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"ui-dropdown-label ui-inputtext ui-corner-all\", \"aria-haspopup\", \"listbox\", 3, \"disabled\", \"click\", \"input\", \"focus\", \"blur\", 4, \"ngIf\"], [\"class\", \"ui-dropdown-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"button\", \"aria-haspopup\", \"listbox\", 1, \"ui-dropdown-trigger\", \"ui-state-default\", \"ui-corner-right\"], [1, \"ui-dropdown-trigger-icon\", \"ui-clickable\", 3, \"ngClass\"], [3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 1, \"ui-dropdown-label\", \"ui-inputtext\", \"ui-corner-all\", 3, \"disabled\", \"click\", \"input\", \"focus\", \"blur\"], [\"editableInput\", \"\"], [1, \"ui-dropdown-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [3, \"ngClass\", \"ngStyle\"], [\"class\", \"ui-dropdown-filter-container\", 3, \"click\", 4, \"ngIf\"], [1, \"ui-dropdown-items-wrapper\"], [\"role\", \"listbox\", 1, \"ui-dropdown-items\", \"ui-dropdown-list\", \"ui-widget-content\", \"ui-widget\", \"ui-corner-all\", \"ui-helper-reset\"], [\"itemslist\", \"\"], [\"class\", \"ui-dropdown-empty-message\", 4, \"ngIf\"], [1, \"ui-dropdown-filter-container\", 3, \"click\"], [\"type\", \"text\", \"autocomplete\", \"off\", 1, \"ui-dropdown-filter\", \"ui-inputtext\", \"ui-widget\", \"ui-state-default\", \"ui-corner-all\", 3, \"value\", \"keydown.enter\", \"keydown\", \"input\"], [\"filter\", \"\"], [1, \"ui-dropdown-filter-icon\", \"pi\", \"pi-search\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"ui-dropdown-item-group\"], [4, \"ngIf\", \"ngIfElse\"], [\"virtualScrollList\", \"\"], [3, \"option\", \"selected\", \"template\", \"onClick\"], [3, \"ngStyle\", \"itemSize\", \"scrolledIndexChange\", 4, \"ngIf\"], [3, \"ngStyle\", \"itemSize\", \"scrolledIndexChange\"], [\"viewport\", \"\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [1, \"ui-dropdown-empty-message\"]],\n    template: function Dropdown_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function Dropdown_Template_div_click_0_listener($event) {\n          return ctx.onMouseclick($event);\n        });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"focus\", function Dropdown_Template_input_focus_3_listener($event) {\n          return ctx.onInputFocus($event);\n        })(\"blur\", function Dropdown_Template_input_blur_3_listener($event) {\n          return ctx.onInputBlur($event);\n        })(\"keydown\", function Dropdown_Template_input_keydown_3_listener($event) {\n          return ctx.onKeydown($event, true);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(6, Dropdown_span_6_Template, 3, 8, \"span\", 6);\n        ɵngcc0.ɵɵtemplate(7, Dropdown_span_7_Template, 2, 4, \"span\", 6);\n        ɵngcc0.ɵɵtemplate(8, Dropdown_input_8_Template, 2, 5, \"input\", 7);\n        ɵngcc0.ɵɵtemplate(9, Dropdown_i_9_Template, 1, 0, \"i\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 9);\n        ɵngcc0.ɵɵelement(11, \"span\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(12, Dropdown_div_12_Template, 9, 16, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(22, _c12, ctx.disabled, ctx.overlayVisible, ctx.focused, ctx.showClear && !ctx.disabled))(\"ngStyle\", ctx.style);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"aria-label\", ctx.selectedOption ? ctx.selectedOption.label : \" \")(\"aria-expanded\", ctx.overlayVisible)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"tabindex\", ctx.tabindex)(\"autofocus\", ctx.autofocus);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"pTooltip\", ctx.tooltip)(\"tooltipPosition\", ctx.tooltipPosition)(\"positionStyle\", ctx.tooltipPositionStyle)(\"tooltipStyleClass\", ctx.tooltipStyleClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label != null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label == null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.editable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.value != null && ctx.showClear && !ctx.disabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.overlayVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.dropdownIcon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc2.Tooltip, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgForOf, DropdownItem, ɵngcc3.CdkVirtualScrollViewport, ɵngcc3.CdkFixedSizeVirtualScroll, ɵngcc3.CdkVirtualForOf],\n    encapsulation: 2,\n    data: {\n      animation: [/*@__PURE__*/trigger('overlayAnimation', [/*@__PURE__*/state('void', /*@__PURE__*/style({\n        transform: 'translateY(5%)',\n        opacity: 0\n      })), /*@__PURE__*/state('visible', /*@__PURE__*/style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), /*@__PURE__*/transition('void => visible', /*@__PURE__*/animate('{{showTransitionParams}}')), /*@__PURE__*/transition('visible => void', /*@__PURE__*/animate('{{hideTransitionParams}}'))])]\n    }\n  });\n  return Dropdown;\n}();\n\nvar DropdownModule = /*@__PURE__*/function () {\n  var DropdownModule = function DropdownModule() {\n    _classCallCheck(this, DropdownModule);\n  };\n\n  DropdownModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropdownModule\n  });\n  DropdownModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    factory: function DropdownModule_Factory(t) {\n      return new (t || DropdownModule)();\n    },\n    imports: [[CommonModule, SharedModule, ScrollingModule, TooltipModule], SharedModule, ScrollingModule]\n  });\n  return DropdownModule;\n}();\n/*@__PURE__*/\n\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownModule, {\n    declarations: function declarations() {\n      return [Dropdown, DropdownItem];\n    },\n    imports: function imports() {\n      return [CommonModule, SharedModule, ScrollingModule, TooltipModule];\n    },\n    exports: function exports() {\n      return [Dropdown, SharedModule, ScrollingModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };","map":null,"metadata":{},"sourceType":"module"}