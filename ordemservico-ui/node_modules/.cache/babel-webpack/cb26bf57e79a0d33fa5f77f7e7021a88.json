{"ast":null,"code":"import _classCallCheck from \"C:/Users/Felip/Documents/Angular/ordemservico-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Felip/Documents/Angular/ordemservico-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, ElementRef, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as Chart from 'chart.js';\nimport * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar UIChart = /*@__PURE__*/function () {\n  var UIChart = /*#__PURE__*/function () {\n    function UIChart(el) {\n      _classCallCheck(this, UIChart);\n\n      this.el = el;\n      this.options = {};\n      this.plugins = [];\n      this.responsive = true;\n      this.onDataSelect = new EventEmitter();\n    }\n\n    _createClass(UIChart, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.initChart();\n        this.initialized = true;\n      }\n    }, {\n      key: \"onCanvasClick\",\n      value: function onCanvasClick(event) {\n        if (this.chart) {\n          var element = this.chart.getElementAtEvent(event);\n          var dataset = this.chart.getDatasetAtEvent(event);\n\n          if (element && element[0] && dataset) {\n            this.onDataSelect.emit({\n              originalEvent: event,\n              element: element[0],\n              dataset: dataset\n            });\n          }\n        }\n      }\n    }, {\n      key: \"initChart\",\n      value: function initChart() {\n        var opts = this.options || {};\n        opts.responsive = this.responsive; // allows chart to resize in responsive mode\n\n        if (opts.responsive && (this.height || this.width)) {\n          opts.maintainAspectRatio = false;\n        }\n\n        this.chart = new Chart(this.el.nativeElement.children[0].children[0], {\n          type: this.type,\n          data: this.data,\n          options: this.options,\n          plugins: this.plugins\n        });\n      }\n    }, {\n      key: \"getCanvas\",\n      value: function getCanvas() {\n        return this.el.nativeElement.children[0].children[0];\n      }\n    }, {\n      key: \"getBase64Image\",\n      value: function getBase64Image() {\n        return this.chart.toBase64Image();\n      }\n    }, {\n      key: \"generateLegend\",\n      value: function generateLegend() {\n        if (this.chart) {\n          return this.chart.generateLegend();\n        }\n      }\n    }, {\n      key: \"refresh\",\n      value: function refresh() {\n        if (this.chart) {\n          this.chart.update();\n        }\n      }\n    }, {\n      key: \"reinit\",\n      value: function reinit() {\n        if (this.chart) {\n          this.chart.destroy();\n          this.initChart();\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.chart) {\n          this.chart.destroy();\n          this.initialized = false;\n          this.chart = null;\n        }\n      }\n    }, {\n      key: \"data\",\n      get: function get() {\n        return this._data;\n      },\n      set: function set(val) {\n        this._data = val;\n        this.reinit();\n      }\n    }]);\n\n    return UIChart;\n  }();\n\n  UIChart.ɵfac = function UIChart_Factory(t) {\n    return new (t || UIChart)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  UIChart.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: UIChart,\n    selectors: [[\"p-chart\"]],\n    inputs: {\n      options: \"options\",\n      plugins: \"plugins\",\n      responsive: \"responsive\",\n      data: \"data\",\n      type: \"type\",\n      width: \"width\",\n      height: \"height\"\n    },\n    outputs: {\n      onDataSelect: \"onDataSelect\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[2, \"position\", \"relative\"], [3, \"click\"]],\n    template: function UIChart_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"canvas\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function UIChart_Template_canvas_click_1_listener($event) {\n          return ctx.onCanvasClick($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.responsive && !ctx.width ? null : ctx.width)(\"height\", ctx.responsive && !ctx.height ? null : ctx.height);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"width\", ctx.responsive && !ctx.width ? null : ctx.width)(\"height\", ctx.responsive && !ctx.height ? null : ctx.height);\n      }\n    },\n    encapsulation: 2\n  });\n  return UIChart;\n}();\n\nvar ChartModule = /*@__PURE__*/function () {\n  var ChartModule = function ChartModule() {\n    _classCallCheck(this, ChartModule);\n  };\n\n  ChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ChartModule\n  });\n  ChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    factory: function ChartModule_Factory(t) {\n      return new (t || ChartModule)();\n    },\n    imports: [[CommonModule]]\n  });\n  return ChartModule;\n}();\n/*@__PURE__*/\n\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartModule, {\n    declarations: function declarations() {\n      return [UIChart];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [UIChart];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ChartModule, UIChart };","map":null,"metadata":{},"sourceType":"module"}