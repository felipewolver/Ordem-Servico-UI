{"ast":null,"code":"import _classCallCheck from \"C:/Users/Felip/Documents/Angular/ordemservico-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Felip/Documents/Angular/ordemservico-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ElementRef, Input, Directive, EventEmitter, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar _c0 = function _c0(a1, a2) {\n  return {\n    \"ui-clickable\": true,\n    \"ui-button-icon-left\": a1,\n    \"ui-button-icon-right\": a2\n  };\n};\n\nfunction Button_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.icon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c0, ctx_r0.iconPos === \"left\", ctx_r0.iconPos === \"right\"));\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nvar _c1 = function _c1(a1, a2, a3, a4, a5, a6) {\n  return {\n    \"ui-button ui-widget ui-state-default ui-corner-all\": true,\n    \"ui-button-icon-only\": a1,\n    \"ui-button-text-icon-left\": a2,\n    \"ui-button-text-icon-right\": a3,\n    \"ui-button-text-only\": a4,\n    \"ui-button-text-empty\": a5,\n    \"ui-state-disabled\": a6\n  };\n};\n\nvar _c2 = [\"*\"];\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar ButtonDirective = /*@__PURE__*/function () {\n  var ButtonDirective = /*#__PURE__*/function () {\n    function ButtonDirective(el) {\n      _classCallCheck(this, ButtonDirective);\n\n      this.el = el;\n      this.iconPos = 'left';\n      this.cornerStyleClass = 'ui-corner-all';\n    }\n\n    _createClass(ButtonDirective, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n\n        if (this.icon) {\n          var iconElement = document.createElement(\"span\");\n          iconElement.setAttribute(\"aria-hidden\", \"true\");\n          var iconPosClass = this.iconPos == 'right' ? 'ui-button-icon-right' : 'ui-button-icon-left';\n          iconElement.className = iconPosClass + ' ui-clickable ' + this.icon;\n          this.el.nativeElement.appendChild(iconElement);\n        }\n\n        var labelElement = document.createElement(\"span\");\n\n        if (this.icon && !this.label) {\n          labelElement.setAttribute('aria-hidden', 'true');\n        }\n\n        labelElement.className = 'ui-button-text ui-clickable';\n        labelElement.appendChild(document.createTextNode(this.label || 'ui-btn'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n      }\n    }, {\n      key: \"getStyleClass\",\n      value: function getStyleClass() {\n        var styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\n\n        if (this.icon) {\n          if (this.label != null && this.label != undefined && this.label != \"\") {\n            if (this.iconPos == 'left') styleClass = styleClass + ' ui-button-text-icon-left';else styleClass = styleClass + ' ui-button-text-icon-right';\n          } else {\n            styleClass = styleClass + ' ui-button-icon-only';\n          }\n        } else {\n          if (this.label) {\n            styleClass = styleClass + ' ui-button-text-only';\n          } else {\n            styleClass = styleClass + ' ui-button-text-empty';\n          }\n        }\n\n        return styleClass;\n      }\n    }, {\n      key: \"setStyleClass\",\n      value: function setStyleClass() {\n        var styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        while (this.el.nativeElement.hasChildNodes()) {\n          this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n\n        this.initialized = false;\n      }\n    }, {\n      key: \"label\",\n      get: function get() {\n        return this._label;\n      },\n      set: function set(val) {\n        this._label = val;\n\n        if (this.initialized) {\n          DomHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label || 'ui-btn';\n\n          if (!this.icon) {\n            if (this._label) {\n              DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\n              DomHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\n            } else {\n              DomHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\n              DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\n            }\n          }\n\n          this.setStyleClass();\n        }\n      }\n    }, {\n      key: \"icon\",\n      get: function get() {\n        return this._icon;\n      },\n      set: function set(val) {\n        this._icon = val;\n\n        if (this.initialized) {\n          var iconPosClass = this.iconPos == 'right' ? 'ui-button-icon-right' : 'ui-button-icon-left';\n          DomHandler.findSingle(this.el.nativeElement, '.ui-clickable').className = iconPosClass + ' ui-clickable ' + this.icon;\n          this.setStyleClass();\n        }\n      }\n    }]);\n\n    return ButtonDirective;\n  }();\n\n  ButtonDirective.ɵfac = function ButtonDirective_Factory(t) {\n    return new (t || ButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ButtonDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ButtonDirective,\n    selectors: [[\"\", \"pButton\", \"\"]],\n    inputs: {\n      iconPos: \"iconPos\",\n      cornerStyleClass: \"cornerStyleClass\",\n      label: \"label\",\n      icon: \"icon\"\n    }\n  });\n  return ButtonDirective;\n}();\n\nvar Button = /*@__PURE__*/function () {\n  var Button = function Button() {\n    _classCallCheck(this, Button);\n\n    this.iconPos = 'left';\n    this.onClick = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n  };\n\n  Button.ɵfac = function Button_Factory(t) {\n    return new (t || Button)();\n  };\n\n  Button.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Button,\n    selectors: [[\"p-button\"]],\n    inputs: {\n      iconPos: \"iconPos\",\n      type: \"type\",\n      icon: \"icon\",\n      label: \"label\",\n      disabled: \"disabled\",\n      style: \"style\",\n      styleClass: \"styleClass\"\n    },\n    outputs: {\n      onClick: \"onClick\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\"\n    },\n    ngContentSelectors: _c2,\n    decls: 5,\n    vars: 16,\n    consts: [[3, \"ngStyle\", \"disabled\", \"ngClass\", \"click\", \"focus\", \"blur\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [1, \"ui-button-text\", \"ui-clickable\"], [3, \"ngClass\"]],\n    template: function Button_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function Button_Template_button_click_0_listener($event) {\n          return ctx.onClick.emit($event);\n        })(\"focus\", function Button_Template_button_focus_0_listener($event) {\n          return ctx.onFocus.emit($event);\n        })(\"blur\", function Button_Template_button_blur_0_listener($event) {\n          return ctx.onBlur.emit($event);\n        });\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵtemplate(2, Button_span_2_Template, 1, 7, \"span\", 1);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"disabled\", ctx.disabled)(\"ngClass\", ɵngcc0.ɵɵpureFunction6(9, _c1, ctx.icon && !ctx.label, ctx.icon && ctx.label && ctx.iconPos === \"left\", ctx.icon && ctx.label && ctx.iconPos === \"right\", !ctx.icon && ctx.label, !ctx.icon && !ctx.label, ctx.disabled));\n        ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.icon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-hidden\", ctx.icon && !ctx.label);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.label || \"ui-btn\");\n      }\n    },\n    directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf],\n    encapsulation: 2\n  });\n  return Button;\n}();\n\nvar ButtonModule = /*@__PURE__*/function () {\n  var ButtonModule = function ButtonModule() {\n    _classCallCheck(this, ButtonModule);\n  };\n\n  ButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonModule\n  });\n  ButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    factory: function ButtonModule_Factory(t) {\n      return new (t || ButtonModule)();\n    },\n    imports: [[CommonModule]]\n  });\n  return ButtonModule;\n}();\n/*@__PURE__*/\n\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonModule, {\n    declarations: function declarations() {\n      return [ButtonDirective, Button];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ButtonDirective, Button];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Button, ButtonDirective, ButtonModule };","map":null,"metadata":{},"sourceType":"module"}